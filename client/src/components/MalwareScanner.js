import React, { useState, useContext } from "react";
import { AuthContext } from "../context/AuthContext";

const MalwareScanner = () => {
  const [result, setResult] = useState(null);
  const [error, setError] = useState(null);
  const [loading, setLoading] = useState(false);

  const { user, loadingUser } = useContext(AuthContext);

  const handleFileUpload = async (e) => {
    const file = e.target.files[0];
    if (!file) return;

    if (!user || !user.userId) {
      setError("❌ Bạn chưa đăng nhập!");
      return;
    }

    const formData = new FormData();
    formData.append("file", file);
    formData.append("userId", user.userId);

    try {
      setLoading(true);
      setResult(null);
      setError(null);

      const res = await fetch(
        "https://ciphercheck-main.onrender.com/api/scan",
        {
          method: "POST",
          body: formData,
        }
      );

      const data = await res.json();
      console.log("✅ Kết quả từ backend:", data);

      if (!res.ok) {
        throw new Error(data.error || "Lỗi không xác định từ máy chủ.");
      }

      setResult({
        isMalicious: data.isMalicious,
        engineCount: data.engineCount,
        totalEngines: data.totalEngines,
        engines: data.engines || [],
        sha256: data.sha256 || "",
      });
    } catch (err) {
      console.error("❌ Lỗi:", err);
      setError(err.message || "Lỗi kết nối tới máy chủ.");
    } finally {
      setLoading(false);
    }
  };

  // Hiển thị đang tải thông tin đăng nhập từ localStorage
  if (loadingUser) {
    return (
      <div style={{ textAlign: "center", marginTop: 40 }}>
        <p style={{ color: "#0ea5e9" }}>🔄 Đang tải thông tin người dùng...</p>
      </div>
    );
  }

  // Nếu không có user sau khi đã load xong
  if (!user || !user.userId) {
    return (
      <div style={{ textAlign: "center", marginTop: 40 }}>
        <p style={{ color: "red" }}>❌ Bạn chưa đăng nhập!</p>
      </div>
    );
  }

  return (
    <div
      style={{
        background: "#fff",
        padding: "30px",
        borderRadius: "12px",
        boxShadow: "0 4px 20px rgba(0,0,0,0.1)",
        maxWidth: "600px",
        margin: "30px auto",
      }}
    >
      <label style={{ fontWeight: "bold", display: "block", marginBottom: 10 }}>
        Tải file cần phân tích:
      </label>
      <input
        type="file"
        onChange={handleFileUpload}
        style={{ marginBottom: 20 }}
      />

      {loading && (
        <p style={{ color: "#0ea5e9" }}>🌀 Đang kiểm tra, vui lòng chờ...</p>
      )}

      {error && <p style={{ color: "red" }}>{error}</p>}

      {result && (
        <div style={{ marginTop: 20 }}>
          <h4>Kết quả từ VirusTotal</h4>
          <p>
            <strong>Kết luận:</strong>{" "}
            {result.isMalicious ? "🚨 Có mã độc!" : "✅ Không phát hiện"}
          </p>
          <p>
            <strong>Phát hiện:</strong>{" "}
            {`${result.engineCount} engine nghi ngờ trong tổng ${result.totalEngines}`}
          </p>
          <p>
            <strong>Xem trên VirusTotal:</strong>{" "}
            {result.sha256 ? (
              <a
                href={`https://www.virustotal.com/gui/file/${result.sha256}`}
                target="_blank"
                rel="noopener noreferrer"
              >
                {result.sha256.slice(0, 10)}... 🔍
              </a>
            ) : (
              <span>Đang xử lý...</span>
            )}
          </p>

          {result.engines.length > 0 && (
            <>
              <p>
                <strong>Các engine phát hiện:</strong>
              </p>
              <ul>
                {result.engines.map((engine, idx) => (
                  <li key={idx}>{engine}</li>
                ))}
              </ul>
            </>
          )}
        </div>
      )}
    </div>
  );
};

export default MalwareScanner;
